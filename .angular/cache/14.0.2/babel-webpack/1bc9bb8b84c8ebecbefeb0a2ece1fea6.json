{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(toastr) {\n      this.toastr = toastr;\n      this.title = 'angular-toast';\n    } //You can set any of the toast characteristics that aren't \"style\" related when you call the toast - or you can also register global toast characteristics in the app.module.js\n    //See the documentation for all the options:  https://www.npmjs.com/package/ngx-toastr\n\n\n    yay() {\n      this.toastr.success(\"I did it!\", \"Yay!\", {\n        timeOut: 2000\n      });\n    }\n\n    boo() {\n      this.toastr.error(\"I couldn't do it!\", \"Error\", {\n        timeOut: 5000\n      });\n    }\n\n    info() {\n      this.toastr.info(\"You should know that...\", \"Info\");\n    }\n\n    warning(msg) {\n      this.toastr.warning(msg, \"Warning\");\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 42,\n    vars: 0,\n    consts: [[\"role\", \"main\", 1, \"content\"], [1, \"btn\", \"btn-yay\", 3, \"click\"], [1, \"btn\", \"btn-err\", 3, \"click\"], [1, \"btn\", \"btn-inf\", 3, \"click\"], [1, \"btn\", \"btn-warn\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \" A \\\"toast\\\" is a popup that only stays for a short amount of time. It has the advantage that the user doesn't have to click anything to acknowledge it, so it's much more workflow friendly than a modal popup that blocks the user from doing anything else until they acknowledge it. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"Traditionally toasts are shown in a corner of the screen so they're visible but not obnoxiously obtrusive.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p\")(6, \"b\");\n        i0.ɵɵtext(7, \"Tip: Don't use toasts for long messages or lists of errors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" where it will take time for the user to read and acknowledge. Toasts should be short and sweet!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p\");\n        i0.ɵɵtext(10, \"Click each button below to see a different kind of toast. With preventDuplicates set to true in the app.module.ts, you will only see one of each toast with the same message at a time, so click-spamming won't result in additional toast. The two warning toasts here have different messages, so they can both come up at the same time.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \" This toast is used to show success:\");\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵelementStart(14, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_14_listener() {\n          return ctx.yay();\n        });\n        i0.ɵɵtext(15, \" Do something!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \"\\u00A0\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \" This toast is used to show that a request failed:\");\n        i0.ɵɵelement(19, \"br\");\n        i0.ɵɵelementStart(20, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_20_listener() {\n          return ctx.boo();\n        });\n        i0.ɵɵtext(21, \" Do something!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \"\\u00A0\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\");\n        i0.ɵɵtext(24, \" This toast is used to show information:\");\n        i0.ɵɵelement(25, \"br\");\n        i0.ɵɵelementStart(26, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_26_listener() {\n          return ctx.info();\n        });\n        i0.ɵɵtext(27, \" Tell me something!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(28, \"\\u00A0\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵtext(30, \" This toast is used to show a warning:\");\n        i0.ɵɵelement(31, \"br\");\n        i0.ɵɵelementStart(32, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_32_listener() {\n          return ctx.warning(\"Erm...\");\n        });\n        i0.ɵɵtext(33, \" Do something!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(34, \"\\u00A0\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"p\");\n        i0.ɵɵtext(36, \" This toast has a different warning (so you can see how the global preventDuplicates=true setting works):\");\n        i0.ɵɵelement(37, \"br\");\n        i0.ɵɵelementStart(38, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_38_listener() {\n          return ctx.warning(\"Warning!\");\n        });\n        i0.ɵɵtext(39, \" I am different!\\n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \"\\u00A0\\n\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(41, \"router-outlet\");\n      }\n    },\n    dependencies: [i2.RouterOutlet]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}